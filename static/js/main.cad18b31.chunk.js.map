{"version":3,"sources":["components/chat/socket.js","components/message/message.js","components/send/send.js","components/chat/chat.js","App.js","index.js"],"names":["socket","io","process","Message","item","currentUser","classMessage","user","classContainer","className","text","Send","value","onChange","onSend","onSubmit","placeholder","type","Chat","state","messages","message","isLogin","users","changeName","event","setState","target","inputName","e","preventDefault","Object","values","includes","alert","title","delay","trim","length","emit","sendMessage","changeMessage","this","on","data","newMessages","shift","str","charAt","toUpperCase","slice","capitalize","map","key","i","id","for","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cad18b31.chunk.js","sourcesContent":["import io from 'socket.io-client';\nconst URL = process.env.REACT_APP_URL || 'localhost:5737';\n\nexport const socket = io(URL);\n","import './message.css';\n\nconst Message = ({ item, currentUser }) => {\n  const classMessage =\n    item.user === currentUser ? 'alert alert-primary' : 'alert alert-dark';\n  const classContainer =\n    item.user === currentUser ? 'message-primary' : 'message-dark';\n  return (\n    <div className={classContainer}>\n      <span className={classMessage}>\n        {item.user}: {item.text}\n      </span>\n    </div>\n  );\n};\n\nexport default Message;\n","const Send = ({ value, onChange, onSend }) => {\n  return (\n    <form className=\"input-group mb-3\" onSubmit={onSend}>\n      <input\n        className=\"form-control\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Enter Your message\"\n      />\n      <button className=\"btn btn-primary\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nexport default Send;\n","import { Component } from 'react';\nimport { alert } from '@pnotify/core';\n\nimport { socket } from './socket';\nimport Message from '../message';\nimport Send from '../send';\nimport './chat.css';\n\nexport default class Chat extends Component {\n  socket = socket;\n  state = {\n    currentUser: '',\n    messages: [],\n    message: '',\n    isLogin: false,\n    users: {},\n  };\n\n  componentDidMount() {\n    this.socket.on('message', data => {\n      if (this.state.isLogin) {\n        this.setState(({ messages }) => {\n          const newMessages = [...messages];\n          if (newMessages.length > 10) {\n            newMessages.shift();\n          }\n          return {\n            messages: [...newMessages, { user: data.user, text: data.message }],\n          };\n        });\n      }\n    });\n\n    this.socket.on('users', data => {\n      this.setState({ users: data });\n    });\n  }\n\n  changeName = event => {\n    this.setState({ currentUser: event.target.value });\n  };\n\n  inputName = e => {\n    e.preventDefault();\n    const user = this.state.currentUser;\n    if (Object.values(this.state.users).includes(user)) {\n      alert({\n        title: 'Oh No!',\n        text: `Sorry, the name \"${user}\" is already taken!`,\n        delay: 5000,\n      });\n      return;\n    }\n    if (user.trim().length > 0) {\n      this.socket.emit('change:name', user);\n      this.setState({ isLogin: true });\n    }\n  };\n\n  sendMessage = e => {\n    e.preventDefault();\n    const { message, currentUser } = this.state;\n    if (message.trim().length > 0) {\n      this.socket.emit('message', {\n        user: currentUser,\n        message: message.trim(),\n      });\n      this.setState({ message: '' });\n    }\n  };\n\n  changeMessage = event => {\n    this.setState({ message: event.target.value });\n  };\n\n  capitalize(str) {\n   return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  render() {\n    const { message, messages, currentUser, isLogin, users } = this.state;\n    if (!isLogin) {\n      return (\n        <main className=\"form-signin\">\n          <h4 className=\"form-floating mb-3\">Please, introduce yourself</h4>\n          <form onSubmit={this.inputName}>\n            <div className=\"form-floating mb-3\">\n              <input\n                className=\"form-control\"\n                value={currentUser}\n                onChange={this.changeName}\n                placeholder=\"Введите ваш никнейм\"\n                id=\"floatingInput\"\n              />\n              <label for=\"floatingInput\">Nickname</label>\n            </div>\n            <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">\n              Sign in\n            </button>\n          </form>\n        </main>\n      );\n    }\n    return (\n      <>\n        <div className=\"container\">\n          <h1>Welcome {this.capitalize(currentUser)}</h1>\n          <div className=\"row align-items-start\">\n            <div className=\"message-list col-md-9\">\n              <Send\n                value={message}\n                onChange={this.changeMessage}\n                onSend={this.sendMessage}\n              />\n              <div className=\"messages\">\n                {messages.map((item, key) => (\n                  <Message item={item} currentUser={currentUser} key={key} />\n                ))}\n              </div>\n            </div>\n            <ul className=\"list-group col-md-3\">\n              {Object.values(users).map((user, i) => (\n                <li className=\"list-group-item\" key={i}>\n                  {user}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import Chat from './components/chat';\n\nfunction App() {\n  return (\n    <>\n      <Chat />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/mobile/dist/PNotifyMobile.css';\nimport '@pnotify/core/dist/BrightTheme.css';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}